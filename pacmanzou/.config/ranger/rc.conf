# ===================================================================
# == basic set
# ===================================================================
set viewmode miller
set column_ratios 1,3,4
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
set show_hidden false
set confirm_on_delete never
set preview_script ~/.config/ranger/scope.sh
set use_preview_script true
set automatically_count_files true
set open_all_images true
set vcs_aware true
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set preview_images true
set preview_images_method w3m
set unicode_ellipsis false
set show_hidden_bookmarks true
set colorscheme default
set preview_files true
set preview_directories true
set collapse_preview true
set save_console_history true
set status_bar_on_top false
set draw_progress_bar_in_status_bar true
set draw_borders false
set dirname_in_tabs false
set mouse_enabled false
set display_size_in_main_column true
set display_size_in_status_bar true
set display_tags_in_all_columns true
set update_title false
set update_tmux_title false
set shorten_title 3
set tilde_in_titlebar false
set max_history_size 20
set max_console_history_size 50
set scroll_offset 10
set flushinput true
set padding_right true
set autosave_bookmarks true
set autoupdate_cumulative_size false
set show_cursor false
set sort natural
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false
set xterm_alt_key false
set cd_bookmarks true
set preview_max_size 0
set show_selection_in_titlebar true
set idle_delay 2000
set metadata_deep_search false
set clear_filters_on_dir_change false
set line_numbers false

unmap <F1>
unmap <F2>
unmap <F3>
unmap <F4>
unmap <F5>
unmap <F6>
unmap <F7>
unmap <F8>
unmap <F9>
unmap <F10>
unmap <F11>
unmap <F12>
unmap <Tab>
unmap <S-TAB>
unmap <C-h>
unmap <C-j>
unmap <C-k>
unmap <C-b>
unmap <C-n>
unmap <C-p>
unmap <C-l>
unmap p`<any>
unmap um<bg>
unmap [
unmap {
unmap ]
unmap }
unmap .
unmap ya
unmap yt
unmap yj
unmap yk
unmap yr
unmap y.
unmap dT
unmap da
unmap dr
unmap dt
unmap dk
unmap dj
unmap dc
unmap du
unmap dU
unmap ph
unmap pd
unmap pP
unmap po
unmap pO
unmap pl
unmap pL
unmap `
unmap b
unmap ~
unmap uy
unmap ud
unmap uq
unmap ut
unmap uV
unmap gL
unmap gl
unmap gr
unmap gd
unmap ge
unmap gp
unmap gm
unmap gM
unmap go
unmap gs
unmap gt
unmap gu
unmap g?
unmap gv
unmap gi
unmap gR
unmap gc
unmap gT
unmap gn
unmap cd
unmap ca
unmap cc
unmap ci
unmap cm
unmap cs
unmap cw
unmap ct
unmap a
unmap W
unmap z
unmap Z
unmap ?
unmap I
unmap "
unmap t
unmap S
unmap ,
unmap Mi
unmap Mf
unmap Mh
unmap Mt
unmap Mm
unmap Mp
unmap MH
unmap Ms
unmap A
unmap H
unmap ;
unmap =
unmap f

alias q    quit
alias q!   quitall
alias qa   quitall
alias qall quitall
alias setl setlocal
alias filter     scout -prt
alias find       scout -aeit
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefiklst

# ===================================================================
# == Define keys for the browser
# ===================================================================
map     q quit
copymap q ZZ ZQ
copymap <End>      G
map <C-r> reset
map <C-c> abort
map <Esc> change_mode normal
map i display_file
map w taskview_open
map <Cr> shell zsh
map :  console shell%space
map r  chain draw_possible_programs; console open_with%space
map s get_cumulative_size
map <C-d>  move down=0.5  pages=True
map <C-u>  move up=0.5    pages=True
map J  move_parent 1
map K  move_parent -1
map <C-h> set show_hidden!
map R shell sudo -E ranger
map gh cd ~
map g/ cd /
map ge cd /etc
map gu cd /usr
map gm cd /mnt
map gb cd ~/Blog
map gi cd ~/Images
map g3 cd ~/.i3
map gp cd ~/Practice
map gt cd ~/Test
map gn cd ~/.config/nvim
map gc cd ~/.config
map gt cd ~/.trash
map gr cd ~/.config/ranger
map gd cd ~/Downloads
map gl cd ~/.local
map cc open_with cloc
map cD shell convmv -f gbk -t utf-8 -r --notest %s/
map cd shell convmv -f gbk -t utf-8 --notest %s
map cf shell mkdir %s\.utf8; iconv -s -f gbk -t utf-8 %s -o %s\.utf8/%s
map cF shell mkdir utf8;find -type f | xargs -i iconv -s -f gbk -t utf-8 {} -o utf8/{}
map crN bulkrename
map crn  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any
map F fzf_select
map /  console search%space
map n  search_next
map N  search_next forward=False
map ?n console filter_stack add name%space
map ?d filter_stack add type d
map ?f filter_stack add type f
map ?l filter_stack add type l
map ?c filter_stack clear
map C console compress%space
map E extracthere
map <C-p>p console shell pandoc %f -o%space
map <C-p>r console shell reveal-md %f -w%space
map Mb console shell sudo mount /dev/sdb1 /mnt
map um console shell sudo umount /mnt
map uu uncut
map ad console shell mkdir%space
map af console shell touch%space
map yy copy
map yi shell copyq write image/png - < %f
map yp shell -f echo -n %d/%f | xclip -selection clipboard
map yd shell -f echo -n %d | xclip -selection clipboard
map yn shell -f echo -n %f | xclip -selection clipboard
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map dsDD console shell sudo rm -rf %s
map D shell D %s
map dDD console delete
map dd cut
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map pp paste
map po paste overwrite=True

# Sorting
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False
map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# ===================================================================
# == Define keys for the console
# ===================================================================
# Basic
cmap <Tab>   eval fm.ui.console.tab()
cmap <S-Tab> eval fm.ui.console.tab(-1)
cmap <Esc>   eval fm.ui.console.close()
cmap <Cr>    eval fm.ui.console.execute()

copycmap <Esc> <C-c>
copycmap <Cr>  <C-m>

# Move around
cmap <Up>    eval fm.ui.console.history_move(-1)
cmap <Down>  eval fm.ui.console.history_move(1)
cmap <Left>  eval fm.ui.console.move(left=1)
cmap <Right> eval fm.ui.console.move(right=1)
cmap <Home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <End>   eval fm.ui.console.move(right=-1, absolute=True)

# Line Editing
cmap <Backspace>  eval fm.ui.console.delete(-1)
cmap <Delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <Backspace> <Backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <Down>      pager_move  down=1
pmap  <Up>        pager_move  up=1
pmap  <Left>      pager_move  left=4
pmap  <Right>     pager_move  right=4
pmap  <Home>      pager_move  to=0
pmap  <End>       pager_move  to=-1
pmap  <Pagedown>  pager_move  down=1.0  pages=True
pmap  <Pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <Up>       k  <C-p>
copypmap <Down>     j  <C-n> <Cr>
copypmap <Left>     h
copypmap <Right>    l
copypmap <Home>     g
copypmap <End>      G
copypmap <C-d>      d
copypmap <C-u>      u

# Basic
pmap     <Esc> pager_close
copypmap <Esc> q Q i <F3>
# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <Up>        taskview_move up=1
tmap <Down>      taskview_move down=1
tmap <Home>      taskview_move to=0
tmap <End>       taskview_move to=-1
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <Up>       k  <C-p>
copytmap <Down>     j  <C-n> <Cr>
copytmap <Home>     g
copytmap <End>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-f>  <Space>
copytmap <PAGEUP>   p  b  <C-b>

# Changing priority and deleting tasks
tmap <C-j>          eval -q fm.ui.taskview.task_move(-1)
tmap <C-k>          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()

# Basic
tmap <Esc> taskview_close
copytmap <Esc> q Q w <C-c>
# default_linemode devicons
