; Start
[start]
command=:AsyncTask file-build-and-run

; Single file
[file-build]
command:c=gcc -g "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out"
command:cpp=g++ -std=c++17 -g "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out"
command:java=javac "$(VIM_FILEPATH)"
command:go=go build $(VIM_FILEPATH)
command:rust=cargo build
cwd=$(VIM_FILEDIR)
errorformat=%f:%l:%m
output=quickfix
silent=1
notify=echo
save=2

[file-run]
command:javascript=node "$(VIM_FILEPATH)"
command:c="$(VIM_FILEDIR)/a.out"
command:cpp="$(VIM_FILEDIR)/a.out"
command:java=java "$(VIM_FILENOEXT)"
command:lua=lua "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:python=time python3 "$(VIM_FILEPATH)"
command:rust=RUST_BACKTRACE=1 cargo run
command:sh=time bash "$(VIM_FILEPATH)"
command:typescript=tsc %
cwd=$(VIM_FILEDIR)
output=quickfix
; silent=1
notify=echo
save=2

[file-build-and-run]
; "!lessc % %<.css"
command:c=gcc -g "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:cpp=g++ -std=c++17 -g "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:java=javac "$(VIM_FILEPATH)" && java "$(VIM_FILENOEXT)"
command:javascript=node "$(VIM_FILEPATH)"
command:lua=lua "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:markdown=:MarkdownPreview
command:go=go run $(VIM_FILEPATH)
command:python=time python3 "$(VIM_FILEPATH)"
command:rust=RUST_BACKTRACE=1 cargo run
command:sh=time bash "$(VIM_FILEPATH)"
command:typescript=tsc %
cwd=$(VIM_FILEDIR)
output=terminal
focus=1
silent=0
notify=echo
save=2

[xdg-open]
command:html=xdg-open "$(VIM_FILEPATH)"
cwd=$(VIM_FILEDIR)
output=quickfix
silent=1
save=2

; MISC
[grep]
command=rg -n --no-heading --color never "$(?keyword)" "<root>" -tc -tcpp -tpy -tvim -tgo
cwd=$(VIM_ROOT)
errorformat=%f:%l:%m

[ctags]
command=ctags -R -f tags .
cwd=$(VIM_ROOT)
errorformat=
