snippet struct "Struct declaration" b
type ${1:StructName} struct {
	${0:${VISUAL}}
}
endsnippet

snippet interface "Interface declaration" b
type ${1:InterfaceName} interface {
	${0:${VISUAL}}
}
endsnippet

snippet fori "for int loop" b
for ${2:i} := 0; $2 < ${1:count}; $2++ {
	${0:${VISUAL}}
}
endsnippet

snippet forr "for range loop" b
for ${1:_, v} := range ${2:collection} {
	${0:${VISUAL}}
}
endsnippet

snippet switch "switch" b
switch ${1:var} {
case ${2:value1}:
	${3}
case ${4:value2}:
	${5}
default:
	${0}
}
endsnippet

snippet /^main/ "Main function" r
func main() {
	${0:${VISUAL}}
}
endsnippet

snippet /^method/ "Method" r
func (${1:receiver} ${2:type}) ${3:name}(${4:params})${5/(.+)/ /}${5:type} {
	${0:${VISUAL}}
}
endsnippet

snippet func "Function" b
func ${1:name}(${2:params})${3/(.+)/ /}${3:type} {
	${0:${VISUAL}}
}
endsnippet

snippet err "Basic error handling" b
if err != nil {
	log.${1:Fatal}(err)
}
endsnippet

# vim:ft=snippets:
