# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet todo "" b
// TODO: $0
endsnippet

snippet fixme "" b
// FIXME: $0
endsnippet

snippet xxx "" b
// XXX: $0
endsnippet

snippet fori "" b
for i := ${1:0}; i < ${2:length}; i++ {
	${3:// pass}
}
endsnippet

snippet /^sort/ "" r
func (s $1) Len() int {
	return len(s)
}

func (s $1) Less(i, j int) bool {
	return s[i] ${2:<} s[j]
}

func (s $1) Swap(i, j int) {
	s[i], s[j] = s[j], s[i]
}
endsnippet

snippet /^heap/ "" r
func (s *$1) Pop() interface{} {
	x := (*s)[len(*s)-1]
	*s = (*s)[:len(*s)-1]
	return x
}

func (s *$1) Push(x interface{}) {
	*s = append(*s, x.(int))
}
endsnippet
